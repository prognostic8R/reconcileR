% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sum_matrix.R
\name{sum_matrix}
\alias{sum_matrix}
\title{Create sum matrices for forecast reconciliation}
\usage{
sum_matrix(
  data,
  keys,
  index,
  outcomes = NULL,
  sort = FALSE,
  .return = c("matrix", "tibble")
)
}
\arguments{
\item{data}{A data frame.}

\item{keys}{A character vector of column names in \code{data} that define the groups/forecast hierarchy.}

\item{index}{The name of a date column.}

\item{outcomes}{The column name of the outcome being forecasted.}

\item{sort}{If \code{sort = TRUE} and \code{.return = "tibble"}, the returned data frame is sorted by the \code{keys} columns.}

\item{.return}{The class of the object returned.}
}
\value{
If \code{.return = "matrix"}, a matrix. If \code{.return = "tibble"}, a data frame with class \code{tibble}.
}
\description{
Simply input a \code{data.frame} and return a sum matrix that automatically captures
a forecast hierarchy.
}
\examples{
library(reconcileR)
keys <- c("country", "state", "city")
index <- "date"
outcome <- "widgets"

data <- get(data(widgets, package = "reconcileR"))

dates <- unique(data[[index]])

data <- reconcileR::sum_matrix(
  data \%>\% dplyr::filter(!!rlang::sym(index) == min(!!rlang::sym(index))),
  keys,
  index,
  .return = "tibble"
)
}
